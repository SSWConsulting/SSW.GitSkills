@using gitskills.Components
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigationManager

@page "/"

<Container>
    <DisplayHeading Size="DisplayHeadingSize.Is1">SSW.GitSkills</DisplayHeading>


    Welcome to SSW GitSkills

    @if(ButtonDisabled)
    {
        <p>
            Looks like you haven't added and API access token for GitHub. You can get one <a href="https://github.com/settings/tokens">here.</a>
        </p>
        <p>
            You will need to select the following scopes:
            <ul>
                <li>
                    repo:status
                </li>
                <li>
                    read:org
                </li>
                <li>
                    read:user
                </li>
                <li>
                    read:repo_hook
                </li>
                <li>
                    read:discussion
                </li>
                <li>
                    read:enterprise
                </li>
            </ul>
        </p>
        <p>
            Once you have your token add it here:
        </p>
        <p>
            <TextEdit @bind-text="@Token" Placeholder="Paste your token here..."/>
            <Button Color="Color.Secondary" Clicked="@(()=>SetToken())">Save</Button>
        </p>
    }

    <p>
        Click the Skills button to go to the GitHub Skills chart page.
    </p>
    <Button @bind-Disabled="ButtonDisabled" Color="Color.Primary" Clicked="@(() => GoToGithub())">Skills</Button>
    @if(ButtonDisabled)
    {
        <span style="margin-left: 5px; color:grey;"> (Disabled until token provided)</span>
    }

</Container>

<Snackbar @ref="savedSnackbar" Color="SnackbarColor.Success">
    <SnackbarBody>
        Token Saved
    </SnackbarBody>
</Snackbar>

@code
{      
    public bool ButtonDisabled { get; set; } = true;

    public string Token { get; set; }

    Snackbar savedSnackbar;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsync<string>("Token");

        if(!string.IsNullOrWhiteSpace(token))
        {
            ButtonDisabled = false;
        }
    }

    void GoToGithub()
    {
        navigationManager.NavigateTo("github");
    }

    private async Task SetToken()
    {
        await localStorage.SetItemAsync<string>("Token", Token);

        ButtonDisabled = false;

        savedSnackbar.Show();
    }
}